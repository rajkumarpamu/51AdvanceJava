ResultSet	
A table of data representing a database result set, which is usually generated by executing a statement that queries the database.

A ResultSet object maintains a cursor pointing to its current row of data. Initially the cursor is positioned before the first row. The next method moves the cursor to the next row, and because it returns false when there are no more rows in the ResultSet object, it can be used in a while loop to iterate through the result set.

[Employee [empid=1, empName=raj kumar], Employee [empid=1, empName=raj kumar], Employee [empid=1, empName=Ravi], Employee [empid=1, empName=Rahul]]


package com.demo.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.demo.dto.EmployeeDTO;

public class EmployeeDAO {
	
	public static Connection getConnection() throws ClassNotFoundException, SQLException {
		Class.forName("oracle.jdbc.OracleDriver");
		System.out.println("Driver is registered");
		String url = "jdbc:oracle:thin:@127.0.0.1:1521:xe";
		Connection con = DriverManager.getConnection(url, "dinesh", "welcome");
		System.out.println("connection is established");
		return con;
	}

	
	public static void insertEmployee(EmployeeDTO emp) throws ClassNotFoundException, SQLException {
		Connection con=null;
		Statement  createStatement = null;
		try {
			con = EmployeeDAO.getConnection();
			createStatement = con.createStatement();
			System.out.println("statement object is created");
			String sql = "insert into empdetails_java values("+emp.getEmpid()+","+"'"+emp.getEmpName()+"'"+")";
			createStatement.execute(sql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			createStatement.close();
			con.close();
		}
	}
	
	public static void deleteEmployee(EmployeeDTO emp) throws ClassNotFoundException, SQLException {
		Connection con=null;
		Statement  createStatement = null;
		try {
			con = EmployeeDAO.getConnection();
			createStatement = con.createStatement();
			System.out.println("statement object is created");
			String sql = "delete from empdetails_java where empid="+""+emp.getEmpid()+"";
			createStatement.execute(sql);
			System.out.println("delete is successfull");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			createStatement.close();
			con.close();
		}
	}
	
	public static List<EmployeeDTO> getEmployee(Integer id) throws ClassNotFoundException, SQLException {
		Connection con=null;
		Statement  createStatement = null;
		List<EmployeeDTO> employeeList = new  ArrayList<>();
		try {
			con = EmployeeDAO.getConnection();
			createStatement = con.createStatement();
			System.out.println("statement object is created");
			String sql = "select * from empdetails_java where empid="+id;
			ResultSet resultSet = createStatement.executeQuery(sql);
			System.out.println("delete is successfull");
		
			while(resultSet.next()) {
				int empId = resultSet.getInt(1);
				String name = resultSet.getString(2);
				EmployeeDTO employee = new EmployeeDTO();
				employee.setEmpid(empId);
				employee.setEmpName(name);
				employeeList.add(employee);
			}
			
		
		} catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			createStatement.close();
			con.close();
		}
		
		return employeeList;
	}
}


package com.demo.dto;

public class EmployeeDTO {

	Integer empid;
	String empName;

	public Integer getEmpid() {
		return empid;
	}

	public void setEmpid(Integer empid) {
		this.empid = empid;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	@Override
	public String toString() {
		return "Employee [empid=" + empid + ", empName=" + empName + "]";
	}

}


package com.demo.dao;

import java.sql.SQLException;
import java.util.List;

import com.demo.dto.EmployeeDTO;

public class AppClient {

	public static void main(String[] args) throws ClassNotFoundException, SQLException {
	

		
		List<EmployeeDTO> employee = EmployeeDAO.getEmployee(1);
		System.out.println(employee);
		
		EmployeeDTO employee2 = employee.get(employee.size()-1 );
		System.out.println("Employee Name Matching with the id:"+employee2.getEmpName());
		

	}

	




}
